{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Charts/Charts.module.css","App.module.css"],"names":["module","exports","Info","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","reportDate","fetchCountries","countries","country","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","date","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","Cards","CountryPicker","Charts","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f1e579d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1Qa2s\",\"card\":\"Cards_card__3yo-R\",\"infected\":\"Cards_infected__24K3P\",\"recovered\":\"Cards_recovered__2rXQ1\",\"deaths\":\"Cards_deaths__2j9c6\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;","import axios from 'axios';\n// import { try } from 'q';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData  = async () => {\n    try {\n        const {data} = await axios.get(url);        \n        const modifiedData = {\n            confirmed: data.confirmed,\n            recovered: data.recovered,\n            deaths: data.deaths,\n            lastUpdate: data.lastUpdate\n        }\n        return modifiedData;\n        // console.log(response);\n\n    }\n    catch(error){\n        console.log(error);\n    }\n\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const  {data}  = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) =>({\n          confirmed: dailyData.confirmed.total,\n          deaths: dailyData.deaths.total,\n          data : dailyData.reportDate,\n             \n        }));\n\n        return modifiedData;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: {countries }} = await axios.get(`${url}/countries`);\n        // console.log(response);\n        return countries.map((country) => country.name)\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Charts.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n  \n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;","import React from 'react';\n\nimport { Cards, CountryPicker, Charts } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        \n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Charts data={data} country={country} /> \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from  './App';\n\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2fxfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3_lb3\"};"],"sourceRoot":""}